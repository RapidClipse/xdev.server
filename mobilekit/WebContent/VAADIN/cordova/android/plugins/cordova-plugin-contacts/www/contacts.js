cordova.define("cordova-plugin-contacts.contacts",function(t,c,o){var n=t("cordova/argscheck"),a=t("cordova/exec"),r=t("./ContactError"),e=t("./Contact"),i=t("./ContactFieldType"),s=t("./convertUtils"),f={fieldType:i,find:function(t,c,o,e){if(n.checkArgs("afFO","contacts.find",arguments),t.length){e=e||{filter:"",multiple:!0};var i=function(t){for(var o=[],n=0,a=t.length;a>n;n++)o.push(s.toCordovaFormat(f.create(t[n])));c(o)};a(i,o,"Contacts","search",[t,e])}else o&&o(new r(r.INVALID_ARGUMENT_ERROR))},pickContact:function(t,c){n.checkArgs("fF","contacts.pick",arguments);var o=function(c){var o=c instanceof e?c:f.create(c);t(s.toCordovaFormat(o))};a(o,c,"Contacts","pickContact",[])},create:function(t){n.checkArgs("O","contacts.create",arguments);var c=new e;for(var o in t)c[o]!==void 0&&t.hasOwnProperty(o)&&(c[o]=t[o]);return c}};o.exports=f})