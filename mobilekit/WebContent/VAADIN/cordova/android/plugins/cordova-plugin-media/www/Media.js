cordova.define("cordova-plugin-media.Media",function(o,t,i){function a(o){if(o.action!="status")throw Error("Unknown media action"+o.action);l.onStatus(o.status.id,o.status.msgType,o.status.value)}var e=o("cordova/argscheck"),r=o("cordova/utils"),n=o("cordova/exec"),s={},l=function(o,t,i,a){e.checkArgs("sFFF","Media",arguments),this.id=r.createUUID(),s[this.id]=this,this.src=o,this.successCallback=t,this.errorCallback=i,this.statusCallback=a,this._duration=-1,this._position=-1,n(null,this.errorCallback,"Media","create",[this.id,this.src])};if(l.MEDIA_STATE=1,l.MEDIA_DURATION=2,l.MEDIA_POSITION=3,l.MEDIA_ERROR=9,l.MEDIA_NONE=0,l.MEDIA_STARTING=1,l.MEDIA_RUNNING=2,l.MEDIA_PAUSED=3,l.MEDIA_STOPPED=4,l.MEDIA_MSG=["None","Starting","Running","Paused","Stopped"],l.get=function(o){return s[o]},l.prototype.play=function(o){n(null,null,"Media","startPlayingAudio",[this.id,this.src,o])},l.prototype.stop=function(){var o=this;n(function(){o._position=0},this.errorCallback,"Media","stopPlayingAudio",[this.id])},l.prototype.seekTo=function(o){var t=this;n(function(o){t._position=o},this.errorCallback,"Media","seekToAudio",[this.id,o])},l.prototype.pause=function(){n(null,this.errorCallback,"Media","pausePlayingAudio",[this.id])},l.prototype.getDuration=function(){return this._duration},l.prototype.getCurrentPosition=function(o,t){var i=this;n(function(t){i._position=t,o(t)},t,"Media","getCurrentPositionAudio",[this.id])},l.prototype.startRecord=function(){n(null,this.errorCallback,"Media","startRecordingAudio",[this.id,this.src])},l.prototype.stopRecord=function(){n(null,this.errorCallback,"Media","stopRecordingAudio",[this.id])},l.prototype.release=function(){n(null,this.errorCallback,"Media","release",[this.id])},l.prototype.setVolume=function(o){n(null,null,"Media","setVolume",[this.id,o])},l.prototype.setRate=function(o){cordova.platformId==="ios"?n(null,null,"Media","setRate",[this.id,o]):console.warn("media.setRate method is currently not supported for",cordova.platformId,"platform.")},l.onStatus=function(o,t,i){var a=s[o];if(a)switch(t){case l.MEDIA_STATE:a.statusCallback&&a.statusCallback(i),i==l.MEDIA_STOPPED&&a.successCallback&&a.successCallback();break;case l.MEDIA_DURATION:a._duration=i;break;case l.MEDIA_ERROR:a.errorCallback&&a.errorCallback(i);break;case l.MEDIA_POSITION:a._position=Number(i);break;default:console.error&&console.error("Unhandled Media.onStatus :: "+t)}else console.error&&console.error("Received Media.onStatus callback for unknown media :: "+o)},i.exports=l,cordova.platformId==="android"||cordova.platformId==="amazon-fireos"||cordova.platformId==="windowsphone"){var c=o("cordova/channel");c.createSticky("onMediaPluginReady"),c.waitForInitialization("onMediaPluginReady"),c.onCordovaReady.subscribe(function(){n(a,void 0,"Media","messageChannel",[]),c.initializationComplete("onMediaPluginReady")})}})